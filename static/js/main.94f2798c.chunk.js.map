{"version":3,"sources":["components/CoinHeader.js","chartConfigs/chartConfigs.js","components/HistoryChart.jsx","pages/CoinDetailPage.jsx","components/Coin.js","pages/CoinListPage.jsx","App.js","index.js"],"names":["CoinHeader","image","name","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","parseFloat","toFixed","historyOptions","lineHeightAnnotation","always","hover","lineWeight","legend","labels","fontColor","animation","duration","maintainAspectRatio","responsive","scales","xAxes","type","distribution","HistoryChart","data","chartRef","useRef","day","week","year","useState","timeFormat","setTimeFormat","determineTimeFormat","useEffect","current","Chartjs","datasets","label","backgroundColor","borderColor","pointRadius","borderWidth","options","ref","id","onClick","CoinDetailPage","useParams","coinData","setCoinData","formatData","map","el","t","y","a","Promise","all","axios","get","coin","prices","fetchData","total_volume","current_price","price_change_percentage_24h","market_cap","to","Coin","CoinListPage","coins","setCoins","search","setSearch","then","res","catch","error","alert","filteredCoins","filter","toLowerCase","includes","placeholder","onChange","e","target","value","App","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94f2798c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Coin.css\";\n\nconst CoinHeader = ({\n  image,\n  name,\n  symbol,\n  price,\n  volume,\n  priceChange,\n  marketcap,\n}) => {\n  //jerryrigged way to fix receiving undefined values\n  //likely that component is trying to render before api data is received\n\n  if (image && name && symbol && price && volume && priceChange && marketcap) {\n    return (\n      <div className=\"coin-container bg-gray-800 rounded-lg mx-5 m-1 \">\n        <div className=\"grid grid-cols-2 md:grid-cols-6  gap-4 coin-row pt-8 pb-10  \">\n          <div className=\" p-4 text-center col-span-2 pl-14 md:pl-0 md:col-start-3 md:mb-5 coin\">\n            <img src={image} alt=\"crypto\" />\n\n            <div>\n              <h1>{name}</h1>\n            </div>\n            <p className=\"coin-symbol\">{symbol}</p>\n          </div>\n          <p className=\" text-center md:col-span-1  md: lg:pl-20 md:col-start-1 coin-price \">\n            <div className=\"coinvalue-title\">\n              Price <br />\n            </div>\n            ${price}\n          </p>\n          <p className=\" text-center  md:col-span-2  coin-volume\">\n            <div className=\"coinvalue-title\">\n              Volume <br />\n            </div>\n            ${volume.toLocaleString()}\n          </p>\n          {priceChange < 0 ? (\n            <div className=\"price-change\">\n              <div className=\"coinvalue-title\">\n                Price Change <br />\n              </div>\n              <p className=\" text-center  coin-percent red\">\n                {parseFloat(priceChange).toFixed(2)}%\n              </p>\n            </div>\n          ) : (\n            <p className=\" text-center md:col-span-1  coin-percent green\">\n              <div className=\"coinvalue-title\">\n                Price Change <br />\n              </div>\n              {parseFloat(priceChange).toFixed(2)}%\n            </p>\n          )}\n          <p className=\" text-center md:col-span-2  coin-marketcap\">\n            <div className=\"coinvalue-title\">\n              Market Cap <br />\n            </div>\n            ${marketcap.toLocaleString()}\n          </p>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default CoinHeader;\n","export const historyOptions = {\n  lineHeightAnnotation: {\n    always: true,\n    hover: false,\n    lineWeight: 1.5,\n  },\n  legend: {\n    labels: {\n      fontColor: \"white\",\n    },\n  },\n  animation: {\n    duration: 500,\n  },\n  maintainAspectRatio: true,\n  responsive: true,\n  scales: {\n    xAxes: [{ type: \"time\", distribution: \"linear\" }],\n  },\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Chartjs from \"chart.js\";\nimport { historyOptions } from \"../chartConfigs/chartConfigs\";\n\nconst HistoryChart = ({ data }) => {\n  const chartRef = useRef();\n  const { day, week, year } = data;\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\n\n  const determineTimeFormat = () => {\n    switch (timeFormat) {\n      case \"24h\":\n        return day;\n      case \"7d\":\n        return week;\n      case \"1y\":\n        return year;\n      default:\n        return day;\n    }\n  };\n\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const chartInstance = new Chartjs(chartRef.current, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              label: \"Price of Currency\",\n              data: determineTimeFormat(),\n              backgroundColor: \"rgba(174,305,194,0.5)\",\n              borderColor: \"rgba(174, 305, 194, 0.4)\",\n              pointRadius: 0,\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: { ...historyOptions },\n      });\n    }\n  });\n  return (\n    <div className=\"chart-div mt-2 rounded p-3 mt-2 \">\n      <div className=\"\">\n        <canvas ref={chartRef} id=\"myChart\"></canvas>\n      </div>\n      <div className=\"chart-button mt-1\">\n        <button\n          className=\"\"\n          onClick={() => setTimeFormat(\"24h\")}\n          className=\"bg-black p-2\"\n        >\n          24h\n        </button>\n        <button\n          onClick={() => setTimeFormat(\"7d\")}\n          className=\"bg-black p-2 mx-1\"\n        >\n          7d\n        </button>\n        <button onClick={() => setTimeFormat(\"1y\")} className=\"bg-black p-2\">\n          1y\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryChart;\n","import axios from \"axios\";\nimport { React, useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport CoinHeader from \"../components/CoinHeader\";\nimport HistoryChart from \"../components/HistoryChart\";\nimport \"../components/HistoryChart.css\";\n\nconst CoinDetailPage = () => {\n  const { id } = useParams();\n  const [coinData, setCoinData] = useState([]);\n\n  //formatting data to make it compatible with chart.js\n  const formatData = (data) => {\n    return data.map((el) => {\n      return { t: el[0], y: el[1].toFixed(10) };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const [day, week, year, coin] = await Promise.all([\n        axios.get(\n          `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=1`\n        ),\n        axios.get(\n          `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=7`\n        ),\n        axios.get(\n          `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=365`\n        ),\n        axios.get(\n          `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${id}`\n        ),\n      ]);\n\n      setCoinData({\n        day: formatData(day.data.prices),\n        week: formatData(week.data.prices),\n        year: formatData(year.data.prices),\n        coin: coin.data[0],\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  const renderData = () => {\n    return (\n      <div className=\"coin-app-detail mt-20 mw- grid content-center grid-cols-3\">\n        <div className=\"header-div\">\n          <h1 className=\"coin-text\">Cryptocurrency Searcher</h1>\n        </div>\n        <div className=\"coin-detail m-auto mt-5 col-span-3\">\n          <CoinHeader\n            key={coinData.coin && coinData.coin.id}\n            name={coinData.coin && coinData.coin.name}\n            image={coinData.coin && coinData.coin.image}\n            symbol={coinData.coin && coinData.coin.symbol}\n            volume={coinData.coin && coinData.coin.total_volume}\n            price={coinData.coin && coinData.coin.current_price}\n            priceChange={\n              coinData.coin && coinData.coin.price_change_percentage_24h\n            }\n            marketcap={\n              coinData.coin && coinData.coin && coinData.coin.market_cap\n            }\n          />\n        </div>\n        <div className=\"history-chart rounded-lg m-auto col-span-3 w-11/12 mt-3  md: lg:w-8/12\">\n          <HistoryChart data={coinData} />\n        </div>\n        <Link className=\"m-auto col-span-3 mt-16 md:mt-5 lg:mt-5\" to=\"/\">\n          <div>\n            <button className=\"transition duration-300 bg-purple-800 rounded-lg py-4 px-8 hover:bg-purple-700\">\n              Back\n            </button>\n          </div>\n        </Link>\n      </div>\n    );\n  };\n\n  return renderData();\n};\n\nexport default CoinDetailPage;\n","import React from \"react\";\n\nimport \"./Coin.css\";\n\nconst Coin = ({\n  image,\n  name,\n  symbol,\n  price,\n  volume,\n  priceChange,\n  marketcap,\n}) => {\n  // if (\n  //   image !== undefined &&\n  //   name !== undefined &&\n  //   symbol !== undefined &&\n  //   price !== undefined &&\n  //   volume !== undefined &&\n  //   priceChange !== undefined &&\n  //   marketcap !== undefined\n  // ) {\n  return (\n    <div className=\"coin-container mx-5 hover:bg-purple-800\">\n      <div className=\"grid grid-cols-2 md:grid-cols-6 lg:grid-cols-9 gap-4 coin-row pt-8 pb-10 lg:pb-1 lg:pt-6 \">\n        <div className=\" p-4 text-center col-span-2 pl-14 md:pl-0 lg:pl-14 lg:col-span-2 md:col-start-3 md:mb-5 coin\">\n          <img src={image} alt=\"crypto\" />\n\n          <div>\n            <h1>{name}</h1>\n          </div>\n          <p className=\"coin-symbol\">{symbol}</p>\n        </div>\n        <p className=\" text-center md:col-span-1 lg:col-span-2 md: lg:pl-20 md:col-start-1 coin-price \">\n          <div className=\"coinvalue-title\">\n            Price <br />\n          </div>\n          ${parseFloat(price).toFixed(2)}\n        </p>\n        <p className=\" text-center  md:col-span-2 lg:col-span-2 coin-volume\">\n          <div className=\"coinvalue-title\">\n            Volume <br />\n          </div>\n          ${volume.toLocaleString()}\n        </p>\n        {priceChange < 0 ? (\n          <div className=\"price-change\">\n            <div className=\"coinvalue-title\">\n              Price Change <br />\n            </div>\n            <p className=\" text-center lg:col-span-1 coin-percent red\">\n              {parseFloat(priceChange).toFixed(3)}%\n            </p>\n          </div>\n        ) : (\n          <p className=\" text-center md:col-span-1 lg:col-span-1 coin-percent green\">\n            <div className=\"coinvalue-title\">\n              Price Change <br />\n            </div>\n            {parseFloat(priceChange).toFixed(3)}%\n          </p>\n        )}\n        <p className=\" text-center md:col-span-2 lg:col-span-2 coin-marketcap\">\n          <div className=\"coinvalue-title\">\n            Market Cap <br />\n          </div>\n          ${marketcap.toLocaleString()}\n        </p>\n      </div>\n    </div>\n  );\n  // }\n  // else {\n  //   return null;\n  // }\n};\n\nexport default Coin;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Coin from \"../components/Coin\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../components/Header\";\n\nconst CoinListPage = () => {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  // fetching coin data\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n      )\n      .then((res) => {\n        setCoins(res.data);\n      })\n      .catch((error) => alert(error));\n  }, []);\n\n  //setting search to user input\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //filter coins based on changed state/user input\n  const filteredCoins = coins.filter((coin) => {\n    return coin.name.toLowerCase().includes(search.toLowerCase());\n  });\n\n  return (\n    <div className=\"coin-app\">\n      {/* <Header /> */}\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\">Search for a cryptocurrency!</h1>\n        <h4 className=\"subtitle\">Click on any coin to view chart data.</h4>\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"coin-input \"\n            onChange={handleChange}\n          />\n        </form>\n      </div>\n\n      {/* iterate through filtered coins */}\n      {filteredCoins.map((coin) => {\n        return (\n          <Link to={`/coins/${coin.id}`}>\n            <Coin\n              key={coin.id}\n              name={coin.name}\n              image={coin.image}\n              symbol={coin.symbol}\n              volume={coin.total_volume}\n              price={coin.current_price}\n              priceChange={coin.price_change_percentage_24h}\n              marketcap={coin.market_cap}\n            />\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CoinListPage;\n","import { BrowserRouter, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport CoinDetailPage from \"./pages/CoinDetailPage\";\nimport CoinListPage from \"./pages/CoinListPage\";\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\">\n          <CoinListPage />\n        </Route>\n        <Route exact path=\"/coins/:id\">\n          <CoinDetailPage />\n        </Route>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}